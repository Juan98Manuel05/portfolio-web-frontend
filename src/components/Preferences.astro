---
import { FetchData } from "@/api/getResources"
const result = new FetchData();

const routeURL:string = '/knowledge/list?favorite=true'
const data = await result.getKnowledges(routeURL)
---

<div class="w-lg">
    <div class="container-section">
        <div class="container-title">
            <h1>
                Favorites 
                <astro-img>
                    <img src="/star-regular.svg" class="star-regular">
                </astro-img>
            </h1>
        </div>
        <div class="flex-grid">
            { data.map(({ icon, name, description, tags }) => (
				<div class="card">
					<div class="flex">
						<div class="container-icon align-center">
							<img src={ icon } alt={ icon }/>
						</div>
						<div class="container-name align-center">
							<h2> { name } </h2>
						</div>
					</div>
					<div class="container-text">
						<p>{ description }</p>
						<p>{ tags }</p>
					</div>
				</div>
            ))}
        </div>
    </div>
</div>

<script>
    class AstroHeart extends HTMLElement{
        constructor(){
            super();
            const star = this.querySelector('img')

            star?.addEventListener('click', () => {
                if(star.classList.contains('star-regular')){
                    star.setAttribute('src', '/star-solid.svg')
                    star.classList.remove('star-regular')
                    star.classList.add('star-solid')

                }else{
                    star.setAttribute('src', '/star-regular.svg')
                    star.classList.remove('star-solid')
                    star.classList.add('star-regular')
                }
            })
        }
    }
    customElements.define('astro-img', AstroHeart)
	
</script>

<style>
    img{
        width: 40px;
    }
    .container-title{
        padding-bottom: 65px;
    }

    .card {
        background: rgba(255, 255, 255, 0.027); /* Fondo semi-transl√∫cido blanco */
        border: 1px solid rgba(128, 128, 128, 0.171);
        border-radius: 8px;
        backdrop-filter: blur(20px); /* Efecto vidrio esmerilado */
        padding: 20px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3); /* Sombra sutil */
        color: #fff; /* Color del texto */
    }
	.container-icon{
		padding: 0 20px 0 0;
	}

	.container-text p{
		font-size: 16px;
		line-height: normal;
		color: #ffffffbe;
	}

	@media screen and (max-width: 425px) {
		.container-title{
        	padding-bottom: 25px;
    	}
	}
    
</style>
